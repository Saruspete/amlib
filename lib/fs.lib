# vim: ft=sh ts=4

if ! [[ "${FUNCNAME[1]}" = ammLib::Load* ]]; then
	echo >&2 "You must not source this library ($BASH_SOURCE): Use function ammLib::Load"
	exit 1
fi

# -----------------------------------------------------------------------------
# AMM Lib meta stubs
# -----------------------------------------------------------------------------

#function ammFs::MetaInit {
#	ammExec::Require awk
#}

# -----------------------------------------------------------------------------
# Filesystem mount management
# -----------------------------------------------------------------------------

function ammFs::Mounted {
	typeset mntdst="$1"
	typeset mntsrc="${2:-}"
	typeset mnttype="${3:-}"
	typeset mntopts="${4:-}"

	typeset mntdstabs="$(readlink -f $mntdst)"

	# Scan currently mounted elements
	typeset src mnt typ opts i1 i2 _junk
	while read src mnt typ opts i1 i2 _junk; do
		if [[ -n "$_junk" ]]; then
			ammLog::Wrn "Found junk value while reading /proc/mounts: '$_junk'"
		fi

		# Check if destination path is mounted
		if [[ "$mnt" == "$mntdstabs" ]]; then
			typeset r=0
			if [[ -n "$mntsrc" ]] && [[ "$src" != "$mntsrc" ]]; then
				ammLog::Wrn "Mnt '$mntdst' mounted with src '$src' instead of '$mntsrc'"
				r+=1
			fi
			if [[ -n "$mnttype" ]] && [[ "$typ" != "$mnttype" ]]; then
				ammLog::Wrn "Mnt '$mntdst' mounted with type '$typ' instead of '$mnttype'"
				r+=1
			fi
			if [[ -n "$mntopts" ]] && [[ "$opts" != "$mntopts" ]]; then
				ammLog::Wrn "Mnt '$mntdst' mounted with opts '$opts' instead of '$mntopts'"
				r+=1
			fi

			return $r
		fi
	done < /proc/mounts

	return 1
}

function ammFs::Mount {
	typeset mntsrc="$2"
	typeset mntdst="$3"
	typeset mntopts="${4:-}"

	typeset mnttype=""

	# If source is a folder, use bindmount
	[[ -d "$mntsrc" ]] && {
		mnttype+="-t none"
		mntopts+="-o bind"
	}

	# Mount the target
	[[ -d "$mntdst" ]] || {
		ammLog::Inf "Target mount '$mntdst' does not exists. Creating"
		mkdir -p "$mntdst"
	}

	ammFs::Mounted "$mntdst" && {
		ammLog::Inf "Mountpoint '$mntdst' already mounted"
		return 0
	}

	# Do the mount
	mount $mnttype $mntopts "$mntsrc" "$mntdst"
}


# -----------------------------------------------------------------------------
# Filesystem creation
# -----------------------------------------------------------------------------
